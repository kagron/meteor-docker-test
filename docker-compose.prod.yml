version: "3.4"

services:
  meteor:
    build:
      context: ./meteor/test-app
      args:
        MONGO_URL: "mongodb://mongo:27017/myappdb"
        ROOT_URL: "${ROOT_URL:-http://localhost:3000}"
        NODE_ENV: "production"
    volumes:
      - ./meteor/test-app:/app/
      - ./config/dev/:/settings
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meteor-test.rule=Host(`meteor.${DOMAIN}`)"
      - "traefik.http.routers.meteor-test.entrypoints=websecure"
      - "traefik.http.routeers.meteor-test.tls.certresolver=leresolver"
      - "traefik.http.services.meteor-test-svc.loadbalancer.server.port=3000"
  
  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.leresolver.acme.email=kagron12@gmail.com"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./lestencrypt:/letsencrypt"
    networks:
      - meteor-network

volumes:
  database1_volume: